{"version":3,"sources":["components/Header.tsx","services/wordService.ts","components/WordForm.tsx","components/WordList.tsx","components/Quiz.tsx","App.tsx","index.tsx"],"names":["Header","_ref","setCurrentPage","activePage","setActivePage","useState","handleNavigation","page","React","createElement","style","background","color","padding","boxShadow","position","zIndex","className","xmlns","viewBox","fill","width","height","d","fontSize","fontWeight","marginLeft","onClick","backgroundColor","border","getWords","words","localStorage","getItem","JSON","parse","saveWord","word","term","find","toLowerCase","findWordByTerm","success","message","push","setItem","stringify","WordForm","onWordAdded","setTerm","definition","setDefinition","setMessage","isSubmitting","setIsSubmitting","fillRule","clipRule","isError","text","onSubmit","e","preventDefault","trim","newWord","id","Date","now","toString","createdAt","setTimeout","result","type","value","onChange","target","placeholder","required","disabled","rows","cx","cy","r","stroke","strokeWidth","WordList","onWordDeleted","searchQuery","setSearchQuery","filteredWords","setFilteredWords","fileInputRef","useRef","deletingId","setDeletingId","useEffect","filter","includes","handleDelete","deleteWord","length","handleExport","exportWordsToJSON","alert","dataStr","dataUri","encodeURIComponent","exportFileName","toISOString","split","linkElement","document","setAttribute","click","handleImportClick","current","ref","async","files","file","jsonFile","Promise","resolve","reject","reader","FileReader","onload","event","_event$target","importedWords","Array","isArray","every","existingWords","existingIds","Set","map","w","existingTerms","newWords","has","updatedWords","error","onerror","readAsText","importWordsFromJSON","accept","display","key","borderRadius","transition","Quiz","currentQuestion","setCurrentQuestion","options","setOptions","selectedOption","setSelectedOption","setResult","score","setScore","totalQuestions","setTotalQuestions","animatingNext","setAnimatingNext","generateQuestion","wordList","generateNewQuestion","questionWord","Math","floor","random","correctOption","incorrectOptions","option","allOptions","i","j","round","toUpperCase","index","isSelected","isCorrect","letter","String","fromCharCode","buttonClasses","justifyContent","flexWrap","margin","prev","handleOptionSelect","flex","boxSizing","handleNextQuestion","App","currentPage","setWords","loadWords","renderPage","getFullYear","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ff3e04f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../App.css';\n\ninterface HeaderProps {\n  setCurrentPage: (page: 'home' | 'words' | 'quiz') => void;\n}\n\nconst Header: React.FC<HeaderProps> = ({ setCurrentPage }) => {\n  const [activePage, setActivePage] = useState<'home' | 'words' | 'quiz'>('home');\n\n  const handleNavigation = (page: 'home' | 'words' | 'quiz') => {\n    setActivePage(page);\n    setCurrentPage(page);\n  };\n\n  return (\n    <header style={{\n      background: 'linear-gradient(90deg, var(--primary) 0%, var(--secondary) 100%)',\n      color: 'white',\n      padding: '1rem',\n      boxShadow: 'var(--shadow-md)',\n      position: 'relative',\n      zIndex: 10\n    }}>\n      <div className=\"container\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 24 24\"\n              fill=\"currentColor\"\n              className=\"mr-2\"\n              style={{ width: '1.5rem', height: '1.5rem' }}\n            >\n              <path d=\"M11.7 2.805a.75.75 0 01.6 0A60.65 60.65 0 0122.83 8.72a.75.75 0 01-.231 1.337 49.949 49.949 0 00-9.902 3.912l-.003.002-.34.18a.75.75 0 01-.707 0A50.009 50.009 0 007.5 12.174v-.224c0-.131.067-.248.172-.311a54.614 54.614 0 014.653-2.52.75.75 0 00-.65-1.352 56.129 56.129 0 00-4.78 2.589 1.858 1.858 0 00-.859 1.228 49.803 49.803 0 00-4.634-1.527.75.75 0 01-.231-1.337A60.653 60.653 0 0111.7 2.805z\" />\n              <path d=\"M13.06 15.473a48.45 48.45 0 017.666-3.282c.134 1.414.22 2.843.255 4.285a.75.75 0 01-.46.71 47.878 47.878 0 00-8.105 4.342.75.75 0 01-.832 0 47.877 47.877 0 00-8.104-4.342.75.75 0 01-.461-.71c.035-1.442.121-2.87.255-4.286A48.4 48.4 0 016 13.18v1.27a1.5 1.5 0 00-.14 2.508c-.09.38-.222.753-.397 1.11.452.213.901.434 1.346.661a6.729 6.729 0 00.551-1.608 1.5 1.5 0 00.14-2.67v-.645a48.549 48.549 0 013.44 1.668 2.25 2.25 0 002.12 0z\" />\n              <path d=\"M4.462 19.462c.42-.419.753-.89 1-1.394.453.213.902.434 1.347.661a6.743 6.743 0 01-1.286 1.794.75.75 0 11-1.06-1.06z\" />\n            </svg>\n            <h1 style={{ fontSize: '1.5rem', fontWeight: 'bold' }}>English Word Trainer</h1>\n          </div>\n\n          <nav>\n            <ul className=\"flex gap-2\">\n              <li style={{ marginLeft: '10px' }}>\n                <button\n                  onClick={() => handleNavigation('home')}\n                  style={{ backgroundColor: 'transparent', border: 'none', color: 'white' }}\n                  className={`px-3 py-1 rounded-full transition-all ${activePage === 'home'\n                      ? 'bg-white text-primary font-medium'\n                      : 'bg-transparent text-white hover:bg-white/20'\n                    }`}\n                >\n                  Home\n                </button>\n              </li>\n              <li style={{ marginLeft: '10px' }}>\n                <button\n                  onClick={() => handleNavigation('words')}\n                  style={{ backgroundColor: 'transparent', border: 'none', color: 'white' }}\n                  className={`px-3 py-1 rounded-full transition-all ${activePage === 'words'\n                      ? 'bg-white text-primary font-medium'\n                      : 'bg-transparent text-white hover:bg-white/20'\n                    }`}\n                >\n                  My Words\n                </button>\n              </li>\n              <li style={{ marginLeft: '10px' }}>\n                <button\n                  onClick={() => handleNavigation('quiz')}\n                  style={{ backgroundColor: 'transparent', border: 'none', color: 'white' }}\n                  className={`px-3 py-1 rounded-full transition-all ${activePage === 'quiz'\n                      ? 'bg-white text-primary font-medium'\n                      : 'bg-transparent text-white hover:bg-white/20'\n                    }`}\n                >\n                  Quiz\n                </button>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header; ","import { Word } from '../models/Word';\n\nconst STORAGE_KEY = 'english_words';\n\nexport const getWords = (): Word[] => {\n  const words = localStorage.getItem(STORAGE_KEY);\n  return words ? JSON.parse(words) : [];\n};\n\nexport const findWordByTerm = (term: string): Word | undefined => {\n  const words = getWords();\n  return words.find(word => word.term.toLowerCase() === term.toLowerCase());\n};\n\nexport const searchWords = (query: string): Word[] => {\n  if (!query.trim()) return getWords();\n  \n  const words = getWords();\n  const lowerQuery = query.toLowerCase();\n  \n  return words.filter(word => \n    word.term.toLowerCase().includes(lowerQuery) || \n    word.definition.toLowerCase().includes(lowerQuery)\n  );\n};\n\nexport const saveWord = (word: Word): { success: boolean; message: string } => {\n  const existingWord = findWordByTerm(word.term);\n  \n  if (existingWord) {\n    return { \n      success: false, \n      message: `The word \"${word.term}\" already exists in your list.` \n    };\n  }\n  \n  const words = getWords();\n  words.push(word);\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(words));\n  \n  return { success: true, message: 'Word saved successfully!' };\n};\n\nexport const deleteWord = (id: string): void => {\n  const words = getWords().filter(word => word.id !== id);\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(words));\n};\n\n// Export words to a JSON file\nexport const exportWordsToJSON = (): void => {\n  const words = getWords();\n  \n  if (words.length === 0) {\n    alert('No words to export!');\n    return;\n  }\n  \n  const dataStr = JSON.stringify(words, null, 2);\n  const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\n  \n  const exportFileName = `english-words-backup-${new Date().toISOString().split('T')[0]}.json`;\n  \n  const linkElement = document.createElement('a');\n  linkElement.setAttribute('href', dataUri);\n  linkElement.setAttribute('download', exportFileName);\n  linkElement.click();\n};\n\n// Import words from a JSON file\nexport const importWordsFromJSON = (jsonFile: File): Promise<{ success: boolean; message: string }> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    \n    reader.onload = (event) => {\n      try {\n        const result = event.target?.result;\n        if (typeof result !== 'string') {\n          resolve({ success: false, message: 'Could not read the file.' });\n          return;\n        }\n        \n        const importedWords = JSON.parse(result) as Word[];\n        \n        if (!Array.isArray(importedWords)) {\n          resolve({ success: false, message: 'Invalid file format. Expected an array of words.' });\n          return;\n        }\n        \n        // Validate each word has the required properties\n        const isValid = importedWords.every(word => \n          typeof word.id === 'string' && \n          typeof word.term === 'string' && \n          typeof word.definition === 'string' && \n          typeof word.createdAt === 'number'\n        );\n        \n        if (!isValid) {\n          resolve({ success: false, message: 'Invalid word data in the file.' });\n          return;\n        }\n        \n        // Merge with existing words, avoiding duplicates\n        const existingWords = getWords();\n        const existingIds = new Set(existingWords.map(w => w.id));\n        const existingTerms = new Set(existingWords.map(w => w.term.toLowerCase()));\n        \n        const newWords = importedWords.filter(word => \n          !existingIds.has(word.id) && !existingTerms.has(word.term.toLowerCase())\n        );\n        \n        const updatedWords = [...existingWords, ...newWords];\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(updatedWords));\n        \n        resolve({ \n          success: true, \n          message: `Successfully imported ${newWords.length} new words.${newWords.length < importedWords.length ? ` (${importedWords.length - newWords.length} duplicates were skipped.)` : ''}` \n        });\n      } catch (error) {\n        resolve({ success: false, message: 'Error parsing the file. Please ensure it\\'s a valid JSON file.' });\n      }\n    };\n    \n    reader.onerror = () => {\n      resolve({ success: false, message: 'Error reading the file.' });\n    };\n    \n    reader.readAsText(jsonFile);\n  });\n}; ","import React, { useState } from 'react';\nimport { saveWord } from '../services/wordService';\nimport { Word } from '../models/Word';\n\ninterface WordFormProps {\n  onWordAdded: () => void;\n}\n\nconst WordForm: React.FC<WordFormProps> = ({ onWordAdded }) => {\n  const [term, setTerm] = useState('');\n  const [definition, setDefinition] = useState('');\n  const [message, setMessage] = useState<{ text: string; isError: boolean } | null>(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!term.trim() || !definition.trim()) return;\n\n    setIsSubmitting(true);\n    \n    const newWord: Word = {\n      id: Date.now().toString(),\n      term: term.trim(),\n      definition: definition.trim(),\n      createdAt: Date.now()\n    };\n    \n    // Simulate slight delay for better UX\n    setTimeout(() => {\n      const result = saveWord(newWord);\n      \n      if (result.success) {\n        setTerm('');\n        setDefinition('');\n        onWordAdded();\n        setMessage({ text: result.message, isError: false });\n      } else {\n        setMessage({ text: result.message, isError: true });\n      }\n      \n      setIsSubmitting(false);\n      \n      // Clear message after 3 seconds\n      setTimeout(() => {\n        setMessage(null);\n      }, 3000);\n    }, 300);\n  };\n\n  return (\n    <div className=\"card p-6 fade-in\">\n      <div className=\"flex items-center mb-4\">\n        <svg \n          xmlns=\"http://www.w3.org/2000/svg\" \n          viewBox=\"0 0 24 24\" \n          fill=\"currentColor\" \n          className=\"mr-2 text-primary\" \n          style={{ width: '1.25rem', height: '1.25rem' }}\n        >\n          <path fillRule=\"evenodd\" d=\"M12 3.75a.75.75 0 01.75.75v6.75h6.75a.75.75 0 010 1.5h-6.75v6.75a.75.75 0 01-1.5 0v-6.75H4.5a.75.75 0 010-1.5h6.75V4.5a.75.75 0 01.75-.75z\" clipRule=\"evenodd\" />\n        </svg>\n        <h2 className=\"text-xl font-bold\">Add New Word</h2>\n      </div>\n      \n      {message && (\n        <div className={`alert ${message.isError ? 'alert-danger' : 'alert-success'} fade-in`}>\n          {message.text}\n        </div>\n      )}\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-4\">\n          <label className=\"form-label\">Word or Phrase</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={term}\n            onChange={(e) => setTerm(e.target.value)}\n            placeholder=\"Enter a word or phrase\"\n            required\n            disabled={isSubmitting}\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"form-label\">Definition/Translation</label>\n          <textarea\n            className=\"form-control\"\n            rows={3}\n            value={definition}\n            onChange={(e) => setDefinition(e.target.value)}\n            placeholder=\"Enter the definition or translation\"\n            required\n            disabled={isSubmitting}\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary w-full\"\n          disabled={isSubmitting}\n        >\n          {isSubmitting ? (\n            <span className=\"flex items-center justify-center\">\n              <svg \n                className=\"animate-spin mr-2 h-4 w-4 text-white\" \n                xmlns=\"http://www.w3.org/2000/svg\" \n                fill=\"none\" \n                viewBox=\"0 0 24 24\"\n              >\n                <circle \n                  className=\"opacity-25\" \n                  cx=\"12\" \n                  cy=\"12\" \n                  r=\"10\" \n                  stroke=\"currentColor\" \n                  strokeWidth=\"4\"\n                ></circle>\n                <path \n                  className=\"opacity-75\" \n                  fill=\"currentColor\" \n                  d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                ></path>\n              </svg>\n              Saving...\n            </span>\n          ) : \"Save Word\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default WordForm; ","import React, { useState, useEffect, useRef } from 'react';\nimport { deleteWord, searchWords, exportWordsToJSON, importWordsFromJSON } from '../services/wordService';\nimport { Word } from '../models/Word';\n\ninterface WordListProps {\n  words: Word[];\n  onWordDeleted: () => void;\n}\n\nconst WordList: React.FC<WordListProps> = ({ words, onWordDeleted }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredWords, setFilteredWords] = useState<Word[]>(words);\n  const [message, setMessage] = useState<{ text: string; isError: boolean } | null>(null);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [deletingId, setDeletingId] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      setFilteredWords(words);\n    } else {\n      setFilteredWords(\n        words.filter(word =>\n          word.term.toLowerCase().includes(searchQuery.toLowerCase()) ||\n          word.definition.toLowerCase().includes(searchQuery.toLowerCase())\n        )\n      );\n    }\n  }, [searchQuery, words]);\n\n  const handleDelete = (id: string) => {\n    setDeletingId(id);\n\n    // Add a small delay for better UX\n    setTimeout(() => {\n      deleteWord(id);\n      onWordDeleted();\n      setDeletingId(null);\n    }, 300);\n  };\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleExport = () => {\n    exportWordsToJSON();\n  };\n\n  const handleImportClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  const handleImportFile = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (!files || files.length === 0) return;\n\n    const file = files[0];\n    const result = await importWordsFromJSON(file);\n\n    setMessage({\n      text: result.message,\n      isError: !result.success\n    });\n\n    if (result.success) {\n      onWordDeleted();\n    }\n\n    // Reset the file input\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n\n    // Clear message after 5 seconds\n    setTimeout(() => {\n      setMessage(null);\n    }, 5000);\n  };\n\n  const renderContent = () => {\n    if (words.length === 0) {\n      return (\n        <div className=\"text-center p-8 fade-in\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"currentColor\"\n            className=\"w-16 h-16 mx-auto text-gray-300 mb-4\"\n          >\n            <path d=\"M11.25 4.533A9.707 9.707 0 006 3a9.735 9.735 0 00-3.25.555.75.75 0 00-.5.707v14.25a.75.75 0 001 .707A8.237 8.237 0 016 18.75c1.995 0 3.823.707 5.25 1.886V4.533zM12.75 20.636A8.214 8.214 0 0118 18.75c.966 0 1.89.166 2.75.47a.75.75 0 001-.708V4.262a.75.75 0 00-.5-.707A9.735 9.735 0 0018 3a9.707 9.707 0 00-5.25 1.533v16.103z\" />\n          </svg>\n          <p className=\"text-gray-500 text-lg mb-2\">Your vocabulary list is empty</p>\n          <p className=\"text-gray-400\">Start by adding some words to learn</p>\n        </div>\n      );\n    }\n\n    if (filteredWords.length === 0) {\n      return (\n        <div className=\"text-center p-8 fade-in\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"currentColor\"\n            className=\"w-16 h-16 mx-auto text-gray-300 mb-4\"\n          >\n            <path d=\"M8.25 10.875a2.625 2.625 0 115.25 0 2.625 2.625 0 01-5.25 0z\" />\n            <path fillRule=\"evenodd\" d=\"M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.125 4.5a4.125 4.125 0 102.338 7.524l2.007 2.006a.75.75 0 101.06-1.06l-2.006-2.007a4.125 4.125 0 00-3.399-6.463z\" clipRule=\"evenodd\" />\n          </svg>\n          <p className=\"text-gray-500 text-lg mb-2\">No words match your search</p>\n          <p className=\"text-gray-400\">Try a different search term</p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"card fade-in\">\n        <div className=\"table-container\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th style={{ width: '40%' }}>Word/Phrase</th>\n                <th style={{ width: '50%' }}>Definition</th>\n                <th style={{ width: '10%' }}>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              {filteredWords.map(word => (\n                <tr key={word.id}>\n                  <td className=\"font-medium\">{word.term}</td>\n                  <td>{word.definition}</td>\n                  <td className=\"text-right\">\n                    <button\n                      onClick={() => handleDelete(word.id)}\n                      style={{ backgroundColor: 'transparent', border: 'none', padding: '0.5rem', borderRadius: '0.25rem', transition: 'background-color 0.3s ease', width: '45px'}}\n                      className=\"text-danger bg-transparent border-0 p-2 rounded-full hover:bg-danger/10 transition-colors\"\n                      disabled={deletingId === word.id}\n                    >\n                      {deletingId === word.id ? (\n                        <svg\n                          className=\"animate-spin h-5 w-5\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          fill=\"none\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <circle\n                            className=\"opacity-25\"\n                            cx=\"12\"\n                            cy=\"12\"\n                            r=\"10\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"4\"\n                          ></circle>\n                          <path\n                            className=\"opacity-75\"\n                            fill=\"currentColor\"\n                            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                          ></path>\n                        </svg>\n                      ) : (\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          viewBox=\"0 0 20 20\"\n                          fill=\"currentColor\"\n                          className=\"w-5 h-5\"\n                        >\n                          <path fillRule=\"evenodd\" d=\"M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5zM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4zM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5z\" clipRule=\"evenodd\" />\n                        </svg>\n                      )}\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto fade-in\">\n      <div className=\"flex justify-between items-center mb-2\">\n        <div className=\"flex items-center\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            fill=\"currentColor\"\n            className=\"w-5 h-5 mr-2 text-primary\"\n          >\n            <path d=\"M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z\" />\n            <path fillRule=\"evenodd\" d=\"M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z\" clipRule=\"evenodd\" />\n            <path d=\"M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z\" />\n          </svg>\n          <h2 className=\"text-xl font-bold\">My Word List</h2>\n          <span className=\"ml-2 bg-primary/10 text-primary px-2 py-0.5 rounded-full text-xs font-medium\">\n            {words.length} {words.length === 1 ? 'word' : 'words'}\n          </span>\n        </div>\n\n        <div className=\"relative\">\n          <input\n            type=\"text\"\n            className=\"form-control pl-10\"\n            placeholder=\"Search words...\"\n            value={searchQuery}\n            onChange={handleSearch}\n          />\n        </div>\n      </div>\n\n      {message && (\n        <div className={`alert ${message.isError ? 'alert-danger' : 'alert-success'} fade-in`}>\n          {message.text}\n        </div>\n      )}\n\n      <div className=\"flex gap-2 mb-4\">\n        {/* <button\n          onClick={handleExport}\n          className=\"btn btn-dark\"\n        >\n          <svg \n            xmlns=\"http://www.w3.org/2000/svg\" \n            viewBox=\"0 0 20 20\" \n            fill=\"currentColor\" \n            className=\"w-5 h-5 mr-1\"\n          >\n            <path d=\"M10.75 2.75a.75.75 0 00-1.5 0v8.614L6.295 8.235a.75.75 0 10-1.09 1.03l4.25 4.5a.75.75 0 001.09 0l4.25-4.5a.75.75 0 00-1.09-1.03l-2.955 3.129V2.75z\" />\n            <path d=\"M3.5 12.75a.75.75 0 00-1.5 0v2.5A2.75 2.75 0 004.75 18h10.5A2.75 2.75 0 0018 15.25v-2.5a.75.75 0 00-1.5 0v2.5c0 .69-.56 1.25-1.25 1.25H4.75c-.69 0-1.25-.56-1.25-1.25v-2.5z\" />\n          </svg>\n          Export Words\n        </button> */}\n\n        <div className=\"p-6 hover:shadow-md\">\n          <button\n            onClick={handleExport}\n            className=\"btn btn-dark\"\n          >\n            Export Words\n          </button>\n        </div>\n\n        <div className=\"p-6 hover:shadow-md\">\n          <button\n            onClick={handleImportClick}\n            className=\"btn btn-dark\"\n          >\n            Import Words\n          </button>\n        </div>\n\n        {/* <button\n          onClick={handleImportClick}\n          className=\"btn btn-dark\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 20 20\"\n            fill=\"currentColor\"\n            className=\"w-5 h-5 mr-1\"\n          >\n            <path d=\"M10.75 16.82A7.462 7.462 0 0115 15.5c.71 0 1.396.098 2.046.282A.75.75 0 0018 15.06v-11a.75.75 0 00-.546-.721A9.006 9.006 0 0015 3a8.963 8.963 0 00-4.25 1.065V16.82zM9.25 4.065A8.963 8.963 0 005 3c-.85 0-1.673.118-2.454.339A.75.75 0 002 4.06v11c0 .332.22.627.543.72a7.506 7.506 0 012.454.338A7.465 7.465 0 009.25 16.82V4.065z\" />\n          </svg>\n          Import Words\n        </button> */}\n\n        <input\n          type=\"file\"\n          ref={fileInputRef}\n          onChange={handleImportFile}\n          accept=\".json\"\n          style={{ display: 'none' }}\n        />\n      </div>\n\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default WordList; ","import React, { useState, useEffect } from 'react';\nimport { Word } from '../models/Word';\n\ninterface QuizProps {\n  words: Word[];\n}\n\nconst Quiz: React.FC<QuizProps> = ({ words }) => {\n  const [currentQuestion, setCurrentQuestion] = useState<Word | null>(null);\n  const [options, setOptions] = useState<string[]>([]);\n  const [selectedOption, setSelectedOption] = useState<string>('');\n  const [result, setResult] = useState<'correct' | 'incorrect' | null>(null);\n  const [score, setScore] = useState<number>(0);\n  const [totalQuestions, setTotalQuestions] = useState<number>(0);\n  const [animatingNext, setAnimatingNext] = useState(false);\n\n  useEffect(() => {\n    if (words.length >= 4) {\n      generateQuestion(words);\n    }\n  }, [words]);\n\n  const generateQuestion = (wordList: Word[]) => {\n    if (wordList.length < 4) {\n      return;\n    }\n\n    // If transitioning between questions, add animation\n    if (currentQuestion) {\n      setAnimatingNext(true);\n      setTimeout(() => {\n        // Reset animation state and update question\n        setAnimatingNext(false);\n        generateNewQuestion(wordList);\n      }, 300);\n    } else {\n      generateNewQuestion(wordList);\n    }\n  };\n\n  const generateNewQuestion = (wordList: Word[]) => {\n    // Get random word for question\n    const randomIndex = Math.floor(Math.random() * wordList.length);\n    const questionWord = wordList[randomIndex];\n    setCurrentQuestion(questionWord);\n\n    // Create options (1 correct, 3 incorrect)\n    const correctOption = questionWord.definition;\n    const incorrectOptions: string[] = [];\n\n    // Get 3 random incorrect options\n    while (incorrectOptions.length < 3) {\n      const randomIdx = Math.floor(Math.random() * wordList.length);\n      const option = wordList[randomIdx].definition;\n      if (option !== correctOption && !incorrectOptions.includes(option)) {\n        incorrectOptions.push(option);\n      }\n    }\n\n    // Combine and shuffle options\n    const allOptions = [correctOption, ...incorrectOptions];\n    for (let i = allOptions.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [allOptions[i], allOptions[j]] = [allOptions[j], allOptions[i]];\n    }\n\n    setOptions(allOptions);\n    setSelectedOption('');\n    setResult(null);\n  };\n\n  const handleOptionSelect = (option: string) => {\n    if (result) return; // Prevent multiple selections\n\n    setSelectedOption(option);\n\n    if (currentQuestion && option === currentQuestion.definition) {\n      setResult('correct');\n      setScore(prev => prev + 1);\n    } else {\n      setResult('incorrect');\n    }\n\n    setTotalQuestions(prev => prev + 1);\n  };\n\n  const handleNextQuestion = () => {\n    generateQuestion(words);\n  };\n\n  if (words.length < 4) {\n    return (\n      <div className=\"bg-white shadow-sm rounded-lg p-6 max-w-md mx-auto text-center\">\n        <div className=\"bg-gray-50 rounded-full p-4 mx-auto w-16 h-16 flex items-center justify-center mb-4\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-8 h-8 text-gray-400\">\n            <path fillRule=\"evenodd\" d=\"M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm11.378-3.917c-.89-.777-2.366-.777-3.255 0a.75.75 0 01-.988-1.129c1.454-1.272 3.776-1.272 5.23 0 1.513 1.324 1.513 3.518 0 4.842a3.75 3.75 0 01-.837.552c-.676.328-1.028.774-1.028 1.152v.75a.75.75 0 01-1.5 0v-.75c0-1.279 1.06-2.107 1.875-2.502.182-.088.351-.199.503-.331.83-.727.83-1.857 0-2.584zM12 18a.75.75 0 100-1.5.75.75 0 000 1.5z\" clipRule=\"evenodd\" />\n          </svg>\n        </div>\n        <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Not Enough Words</h2>\n        <p className=\"text-gray-500 mb-4\">\n          You need at least 4 words in your vocabulary list to start a quiz.\n        </p>\n        <div className=\"bg-blue-50 p-4 rounded-md border border-blue-100\">\n          <p className=\"text-sm text-blue-700\">Try adding more words to your list, then come back to test your knowledge.</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={`bg-white shadow-sm rounded-lg overflow-hidden max-w-md mx-auto transition-opacity duration-300 ${animatingNext ? 'opacity-0' : 'opacity-100'}`}\n    >\n      {/* Header */}\n      <div className=\"bg-gradient-to-r from-blue-500 to-indigo-600 px-6 py-4 text-white\">\n        <div className=\"flex items-center justify-between mb-2\">\n          <div className=\"flex items-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" className=\"w-5 h-5 mr-2 text-white opacity-90\">\n              <path d=\"M11.7 2.805a.75.75 0 01.6 0A60.65 60.65 0 0122.83 8.72a.75.75 0 01-.231 1.337 49.949 49.949 0 00-9.902 3.912l-.003.002-.34.18a.75.75 0 01-.707 0A50.009 50.009 0 007.5 12.174v-.224c0-.131.067-.248.172-.311a54.614 54.614 0 014.653-2.52.75.75 0 00-.65-1.352 56.129 56.129 0 00-4.78 2.589 1.858 1.858 0 00-.859 1.228 49.803 49.803 0 00-4.634-1.527.75.75 0 01-.231-1.337A60.653 60.653 0 0111.7 2.805z\" />\n              <path d=\"M13.06 15.473a48.45 48.45 0 017.666-3.282c.134 1.414.22 2.843.255 4.285a.75.75 0 01-.46.71 47.878 47.878 0 00-8.105 4.342.75.75 0 01-.832 0 47.877 47.877 0 00-8.104-4.342.75.75 0 01-.461-.71c.035-1.442.121-2.87.255-4.286A48.4 48.4 0 016 13.18v1.27a1.5 1.5 0 00-.14 2.508c-.09.38-.222.753-.397 1.11.452.213.901.434 1.346.661a6.729 6.729 0 00.551-1.608 1.5 1.5 0 00.14-2.67v-.645a48.549 48.549 0 013.44 1.668 2.25 2.25 0 002.12 0z\" />\n              <path d=\"M4.462 19.462c.42-.419.753-.89 1-1.394.453.213.902.434 1.347.661a6.743 6.743 0 01-1.286 1.794.75.75 0 11-1.06-1.06z\" />\n            </svg>\n            <h2 className=\"font-bold text-lg\">Word Quiz</h2>\n          </div>\n\n          {totalQuestions > 0 && (\n            <span className=\"bg-white bg-opacity-30 text-white text-xs font-medium py-1 px-3 rounded-full\">\n              Score: {score}/{totalQuestions}\n            </span>\n          )}\n        </div>\n\n        {totalQuestions > 0 && (\n          <div className=\"mt-2 bg-white bg-opacity-20 rounded-full h-1.5\" style={{ fontWeight: 'bold' }}>\n            <div\n              className=\"bg-white h-1.5 rounded-full transition-all duration-500\"\n              style={{ width: `${Math.round((score / totalQuestions) * 100)}%` }}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Content */}\n      <div className=\"p-6\">\n        {currentQuestion && (\n          <div>\n            <div className=\"mb-6\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <span className=\"text-xs font-medium text-gray-500\">\n                  Question {totalQuestions + 1}\n                </span>\n                <span className=\"text-xs font-medium px-2 py-1 bg-blue-50 text-blue-700 rounded-full\" style={{ fontWeight: 'bold' }}>\n                  {score} correct\n                </span>\n              </div>\n              <h3 className=\"text-sm font-medium text-gray-500 mb-1\">What is the meaning of:</h3>\n              <p className=\"text-xl font-bold text-gray-800 p-3 border border-gray-100 rounded-lg bg-gray-50 text-center\" style={{ fontWeight: 'bold' }}>\n                {currentQuestion.term.toUpperCase()}\n              </p>\n            </div>\n\n            <div className=\"space-y-2 mb-4\">\n              {options.map((option, index) => {\n                const isSelected = selectedOption === option;\n                const isCorrect = option === currentQuestion.definition;\n                const letter = String.fromCharCode(65 + index);\n\n                let buttonClasses = \"w-full text-left px-3 py-2 rounded transition-all\";\n\n                // Default state (no result yet)\n                if (!result) {\n                  buttonClasses += \" bg-white hover:bg-gray-50 border-gray-300\";\n                }\n                // Correct answer\n                else if (isCorrect) {\n                  buttonClasses += \" bg-green-50 border-green-300 text-green-700\";\n                }\n                // Selected but incorrect\n                else if (isSelected) {\n                  buttonClasses += \" bg-red-50 border-red-300 text-red-700\";\n                }\n                // Not selected and not correct\n                else {\n                  buttonClasses += \" bg-gray-50 border-gray-300 text-gray-500\";\n                }\n\n                return (\n                  <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', margin: '10px 10px 10px 10px' }}>\n\n\n                    <button\n                      key={index}\n                      onClick={() => handleOptionSelect(option)}\n                      disabled={!!result}\n                      className={buttonClasses}\n                      style={{ padding: '10px 10px 10px 10px',  backgroundColor: 'white', flex: '0 0 calc(50% - 10px)', boxSizing: 'border-box' }}\n                    >\n                      <span className=\"inline-flex items-center\" style={{ }}>\n                        <span className=\"font-small mr-2\">{letter}.</span>\n                        <span>{option.toUpperCase()}</span>\n                      </span>\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n\n            {result && (\n              <div>\n                {result === 'incorrect' && (\n                  <div className=\"bg-red-50 border border-red-100 rounded-md p-3 mb-4 text-sm text-red-700\">\n                    <p className=\"font-medium\" style={{ fontWeight: 'bold', color: 'red' }}>Incorrect answer</p>\n                    <p>The correct answer is: <span className=\"font-medium\" style={{ fontWeight: 'bold' }}>{currentQuestion.definition.toUpperCase()}</span></p>\n                  </div>\n                )}\n\n                <button\n                  onClick={handleNextQuestion}\n                  className=\"w-full py-3 bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-medium rounded-md hover:from-blue-600 hover:to-indigo-700 transition-all shadow-sm flex items-center justify-center\"\n                >\n                  <span>Next Question</span>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"w-4 h-4 ml-2\">\n                    <path fillRule=\"evenodd\" d=\"M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z\" clipRule=\"evenodd\" />\n                  </svg>\n                </button>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Quiz; ","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport WordForm from './components/WordForm';\nimport WordList from './components/WordList';\nimport Quiz from './components/Quiz';\nimport { getWords } from './services/wordService';\nimport { Word } from './models/Word';\nimport './App.css';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState<'home' | 'words' | 'quiz'>('home');\n  const [words, setWords] = useState<Word[]>([]);\n\n  useEffect(() => {\n    loadWords();\n  }, []);\n\n  const loadWords = () => {\n    setWords(getWords());\n  };\n\n  const renderPage = () => {\n    switch (currentPage) {\n      case 'home':\n        return (\n          <div className=\"container fade-in\">\n            <div className=\"mb-4\">\n              <h2 className=\"text-2xl font-bold mb-2\">Welcome to English Word Trainer</h2>\n              <p className=\"mb-4\">\n                This app helps you memorize English words by creating your personal vocabulary list\n                and testing your knowledge with quizzes.\n              </p>\n            </div>\n            <div className=\"grid sm:grid-cols-2 gap-4\">\n              <div className=\"card p-6 hover:shadow-md\">\n                <h3 className=\"text-xl mb-3\">Add Words</h3>\n                <p className=\"mb-4\">\n                  Build your vocabulary by adding words you want to learn.\n                </p>\n                <button \n                  onClick={() => setCurrentPage('words')}\n                  className=\"btn btn-primary\"\n                >\n                  My Word List\n                </button>\n              </div>\n              <div className=\"card p-6 hover:shadow-md\">\n                <h3 className=\"text-xl mb-3\">Test Your Knowledge</h3>\n                <p className=\"mb-4\">\n                  Take quizzes to practice and reinforce your memory.\n                </p>\n                <button \n                  onClick={() => setCurrentPage('quiz')}\n                  className=\"btn btn-success\"\n                >\n                  Start Quiz\n                </button>\n              </div>\n            </div>\n          </div>\n        );\n      case 'words':\n        return (\n          <div className=\"container fade-in\">\n            <WordForm onWordAdded={loadWords} />\n            <div className=\"mt-4\">\n              <WordList words={words} onWordDeleted={loadWords} />\n            </div>\n          </div>\n        );\n      case 'quiz':\n        return (\n          <div className=\"container fade-in\">\n            <Quiz words={words} />\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Header setCurrentPage={setCurrentPage} />\n      <main className=\"py-8\">\n        {renderPage()}\n      </main>\n      <footer className=\"bg-gray-800 text-white p-4 text-center\">\n        <p>English Word Trainer &copy; {new Date().getFullYear()}</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n); "],"sourceRoot":""}